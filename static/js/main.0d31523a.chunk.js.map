{"version":3,"sources":["components/Input.js","components/List1.js","pages/Todo.js","index.js"],"names":["Input","htmlFor","id","ref","inp","input","value","this","props","inpValue","type","onChange","handleChange","onClick","addTodo","Component","List1","arr1","todos","filter","item","done","length","renderTodos","style","color","Todo","e","setState","target","state","title","delTodo","idx","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","className","ReactDOM","render","document","getElementById"],"mappings":"qLAmBeA,E,uKAhBF,IAAD,OACJ,OACI,6BACI,2BAAOC,QAAQ,OAAf,YACA,2BACAC,GAAG,MACHC,IAAK,SAAAC,GAAG,OAAE,EAAKC,MAAQD,GACvBE,MAAOC,KAAKC,MAAMC,SAClBC,KAAK,OACLC,SAAUJ,KAAKC,MAAMI,eAErB,4BAAQC,QAASN,KAAKC,MAAMM,SAA5B,qB,GAZIC,aCiBLC,E,uKAfP,IAAIC,EAAOV,KAAKC,MAAMU,MAAMC,QAAQ,SAAAC,GAAI,OAAKA,EAAKC,QAClD,OACI,6BACI,uDAASJ,EAAKK,QACd,4BACKf,KAAKC,MAAMe,aAAY,IAE5B,wDACA,wBAAIC,MAAO,CAACC,MAAgB,UACvBlB,KAAKC,MAAMe,aAAY,S,GAXxBR,aC0FLW,E,kDAtFX,aAAc,IAAD,8BACT,gBAMJd,aAAe,SAACe,GACZ,EAAKC,SAAS,CAACnB,SAASkB,EAAEE,OAAOvB,SARxB,EAyBbQ,QAAU,WACkB,IAArB,EAAKgB,MAAMrB,WAGd,EAAKmB,SAAS,CACVV,MAAM,CACF,CACIa,MAAO,EAAKD,MAAMrB,SAClBY,MAAM,IAHT,mBAKE,EAAKS,MAAMZ,UAGtB,EAAKU,SAAS,CAACnB,SAAS,OAtCf,EAyCbuB,QAAU,SAACC,GACP,EAAKL,SAAS,CACVV,MAAO,EAAKY,MAAMZ,MAAMC,QAAO,SAACC,EAAKc,GAAN,OAAcA,GAAOD,QA3C/C,EA8CbE,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,MAAMZ,QACpDkB,EAASF,GAAOb,MAAQe,EAASF,GAAOb,KACxC,EAAKO,SAAS,CACVV,MAAOkB,KAlDF,EAqDbb,YAAc,SAACF,GACX,OAAO,EAAKS,MAAMZ,MAAMsB,KAAI,SAACC,EAAKR,GAC9B,GAAGZ,GAAMoB,EAAKpB,KACV,OAAO,4BACH,2BACIR,QAAS,kBAAI,EAAKsB,OAAOF,IACzBS,QAASrB,EACTX,KAAK,aAET,0BAAMiC,wBAAyB,CAACC,OAAOH,EAAKV,SAC5C,4BACIlB,QAAS,kBAAI,EAAKmB,QAAQC,KAD9B,qBA7DZ,EAAKH,MAAQ,CACTrB,SAAU,GACVS,MAAM,IAJD,E,gEAYT,IAAIA,EAAQ2B,aAAaC,QAAQ,SAC9B5B,GACCX,KAAKqB,SAAS,CACVV,MAAOmB,KAAKC,MAAMpB,O,2CAK1B2B,aAAaE,QACT,QACAV,KAAKE,UAAUhC,KAAKuB,MAAMZ,U,+BAkDxB,IAAD,EACoBX,KAAKuB,MAAvBZ,EADF,EACEA,MAAMT,EADR,EACQA,SACb,OACI,yBAAKuC,UAAU,OAEX,kBAAC,EAAD,CAAOvC,SAAUA,EAAUG,aAAcL,KAAKK,aAAcE,QAASP,KAAKO,UAE1E,kBAAC,EAAD,CAAOI,MAAOA,EAAOK,YAAahB,KAAKgB,YACvCY,OAAQ5B,KAAK4B,OAAQH,QAASzB,KAAKyB,e,GAjFhCjB,aCInBkC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0d31523a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Input extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                id='inp'\r\n                ref={inp=>this.input = inp}\r\n                value={this.props.inpValue}\r\n                type=\"text\" \r\n                onChange={this.props.handleChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;","import React, { Component } from 'react';\r\n\r\nclass List1 extends Component {\r\n    render(){\r\n        let arr1 = this.props.todos.filter( item => !item.done);\r\n        return(\r\n            <div>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {this.props.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul style={{color:3<2?'red':'green'}}>\r\n                    {this.props.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default List1;","import React, { Component } from 'react';\r\nimport Input from '../components/Input';\r\nimport List1 from '../components/List1';\r\n//引入子组件\r\n\r\nclass Todo extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {todos,inpValue} = this.state;\r\n        return (\r\n            <div className=\"box\">\r\n\r\n                <Input inpValue={inpValue} handleChange={this.handleChange} addTodo={this.addTodo} />\r\n                \r\n                <List1 todos={todos} renderTodos={this.renderTodos}\r\n                toggle={this.toggle} delTodo={this.delTodo}/>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Todo;","// import { render } from '@testing-library/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// import Control from './components/control';\n// import Demo1 from './components/demo1';\n// import App from './pages/app';\n// import Hoc,{Detail} from './pages/Hoc';\nimport TodoList from './pages/Todo';\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   // <Home data='abc'/>,\n//   // <Control />,\n//   // <App />,\n//   <div><Hoc/><Detail/></div>,\n//   document.getElementById('root')\n// );\n\n\n\n\n// import $ from 'jquery';\n// console.log($);\n\n\n// let List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key={item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//     // this.handleClick = this.handleClick.bind(this)\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   getData = (page)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+page)\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   render(){\n//     const { data } = this.state;\n//     const btns = [1,2,3,4,5];\n//     return <div>\n//       {\n//         btns.map(\n//           (item)=>(\n//             <button \n//               key={item}\n//               onClick={()=>this.getData(item)}\n//             >\n//               {item}\n//             </button>\n//         ))\n//       }\n//       <List data={data}/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   // <Home data='abc'/>,\n//   <Control />,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n\n\n//组件声明\n//函数组件\n//UI（展示）组件，木偶组件\n\n// function App(props){\n//   const {title,id} = props;\n//   return <div>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// //智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state = {\n//       name:new Date().toLocaleString()\n//     }\n//     setTimeout(()=>{\n//       this.setState({name:'ty'})\n//     },3000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title='neo' id='world'/>\n//   </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo title='neo' id='world'/>,\n//   document.getElementById('root')\n// );\n\n\n\n\n// let ele = <h1 id='title' className='tit'><div>当前时间</div>{new Date().toLocaleString()}</h1>\n// ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// );\n\n\n\n// let ele = <h1 id='title' className='tit'><div>react</div></h1>\n// console.log(ele);\n// //将jdx对象渲染到DOM对象中\n// let ReactDOM = {\n//   render(eleObj,container){\n//   //解构\n//     const{type,props} = eleObj;\n//     //创建第一层节点\n//     let ele = document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       if(prop == 'children') {\n//         if(typeof props.children == 'string'){\n//           const txtNode = document.createTextNode(child);\n//           elel.appendChild(txtNode);\n//           break;\n//         }\n//       //将第一层节点对象的子元素添加进去\n//       props.children.forEach(child => {\n//         if(typeof child == 'string'){\n//           const txtNode = document.createTextNode(child);\n//           elel.appendChild(txtNode);\n//         }else{\n//           ReactDOM.render(child,ele);\n//         }\n//       });\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n//     //将第一层DOM节点添加到container中\n\n//     container.appendChild(ele);\n//   }\n// }\n\n\n"],"sourceRoot":""}